//Automat-IT
// - by this you could close the line
/* - by this more than one line could be
closed*/
node{
  
  def mvnHome
  stage('Preparation') {
      // Get some code from a GitHub repository
      git 'https://github.com/zivkashtan/course.git';
      // Get the Maven tool.
      mvnHome = tool 'M3'
   }
  
 stage('Package') {
      // Run the maven package
      echo sh (returnStdout: true, script: "'${mvnHome}/bin/mvn' package")
   }


 
  stage('Creating Dockerfile') {
       //Create the Dockerfile in the workdir
       echo sh (returnStdout: true, script: "echo 'FROM tomcat:8.0.20-jre8' > Dockerfile")
       echo sh (returnStdout: true, script: "echo 'COPY ./web/target/time-tracker-web-0.3.1.war /usr/local/tomcat/webapps/' >> Dockerfile")
   }


  stage('Docker build image') {
       echo sh (returnStdout: true, script: "docker build -t levep79/time-tracker .")
   }
  
  stage('Ansible push image') {
      //Doing the docker login into the DockerHub
      //Pushing the image to the repository
      echo sh (returnStdout: true, script: "ansible-playbook /home/ubuntu/docker_push_playbook.yml -i /home/ubuntu/hosts")
      
   } 

  stage('Ansible pull and run image') {
      //Pull image from the DockerHub
      //Run the image within the exposed '80' port
      echo sh (returnStdout: true, script: "ansible-playbook /home/ubuntu/docker_pull_run_playbook.yml -i /home/ubuntu/hosts")
      
   }

   stage('Kubernetes deployment') {
    //Create the deployment using pre configured yaml file
	echo sh (returnStdout: true, script: "kubectl --insecure-skip-tls-verify create -f /home/ubuntu/time-tracker-deployment.yaml")
	//Create the service using pre configured yaml file
	echo sh (returnStdout: true, script: "kubectl --insecure-skip-tls-verify create -f /home/ubuntu/time-tracker-LB-service.yaml")
    }   
}
